name: Build Squidify App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        os: [linux, windows, macos]
        include:
          - os: linux
            runner: ubuntu-latest
            platform: linux
          - os: windows
            runner: windows-latest
            platform: windows
          - os: macos
            runner: macos-latest
            platform: mac

    name: Build for ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Nativefier
        run: npm install -g nativefier

      - name: Build app with Nativefier
        run: |
          mkdir output
          nativefier \
            --name "Squidify" \
            --platform=${{ matrix.platform }} \
            --resizable \
            --enable-dev-tools \
            --single-instance \
            --tray \
            --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36" \
            --chromium-args="--disable-http2 --disable-quic --disable-features=QUIC,HTTP3 --enable-features=HttpProtocolNegotiation" \
            "https://squidify.org" output/

      - name: Rename Windows folder for NSIS (Windows only)
        if: matrix.os == 'windows'
        run: |
          folder=$(find output -maxdepth 1 -type d -name '*win32-x64' | head -n 1)
          if [[ -n "$folder" && "$folder" != "output/Squidify-win32-x64" ]]; then
            mv "$folder" output/Squidify-win32-x64
          fi

      - name: Build NSIS installer (Windows only)
        if: matrix.os == 'windows'
        run: |
          makensis installer.nsi

      - name: Zip Windows output folder
        if: matrix.os == 'windows'
        run: |
          cd output
          zip -r squidify-windows.zip Squidify-win32-x64

      - name: Upload Windows artifacts
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: squidify-windows-output
          path: |
            output/squidify-windows.zip
            output/SquidifySetup.exe

      - name: Install snapd & appimagetool (Linux only)
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install appimagetool --classic

      - name: Rename Linux folder (Linux only)
        if: matrix.os == 'linux'
        run: |
          folder=$(find output -maxdepth 1 -type d -name '*linux-x64' | head -n 1)
          if [[ -n "$folder" && "$folder" != "output/Squidify-linux-x64" ]]; then
            mv "$folder" output/Squidify-linux-x64
          fi

      - name: Build AppImage (Linux only)
        if: matrix.os == 'linux'
        run: |
          appimagetool output/Squidify-linux-x64 output/Squidify.AppImage

      - name: Upload Linux artifact
        if: matrix.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: squidify-linux
          path: output/Squidify.AppImage

      - name: Rename macOS folder (macOS only)
        if: matrix.os == 'macos'
        run: |
          folder=$(find output -maxdepth 1 -type d -name '*mac-x64' | head -n 1)
          if [[ -n "$folder" && "$folder" != "output/Squidify-mac-x64" ]]; then
            mv "$folder" output/Squidify-mac-x64
          fi

      - name: Create macOS DMG (macOS only)
        if: matrix.os == 'macos'
        run: |
          brew install create-dmg || true
          # Ensure the output directory exists
          mkdir -p output
          # Remove any existing output dmg file to avoid conflict
          rm -f output/Squidify.dmg
          # Run create-dmg with:
          # first arg: path to app folder
          # second arg: full dmg file path
          create-dmg "output/Squidify-mac-x64" "output/Squidify.dmg"

      - name: Upload macOS artifacts
        if: matrix.os == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: squidify-macos
          path: |
            output/Squidify-mac-x64
            Squidify.dmg
